{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","title","year","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAiCeA,MA7Bf,YAAuD,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACI,sBAAKC,UAAW,QAAhB,UACA,qBAAKC,IAAMH,EAAQI,IAAMP,EAAOA,MAASA,IAC7C,sBAAKK,UAAW,cAAhB,UACI,oBAAIA,UAAW,eAAf,SAA+BL,IAC/B,oBAAIK,UAAW,cAAf,SAA8BJ,IAC9B,oBAAII,UAAW,gBAAf,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAiBL,UAAW,gBAA5B,SAA6CI,GAAnCC,QAGhB,oBAAGL,UAAW,iBAAd,UAAgCH,EAAQS,MAAM,EAAE,KAAhD,gBC2COC,E,4MArDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAW,8BAAAC,EAAA,sEAKCC,IAAMC,IACd,yDANO,gBAGEJ,EAHF,EAEPK,KACEA,KAAOL,OAOX,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAV1B,2C,uDAaX,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACA,0BAASV,UAAW,YAApB,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAMA,UAAW,gBAAjB,oCAEDS,EACC,qBAAKT,UAAW,SAAhB,SACE,sBAAMA,UAAW,eAAjB,0BAIF,qBAAKA,UAAW,SAAhB,SACCU,EAAOP,KAAI,SAAAe,GAAK,OACjB,cAAC,EAAD,CAEAC,GAAMD,EAAMC,GACZxB,MAASuB,EAAMvB,MACfC,KAAQsB,EAAMtB,KACdC,QAAWqB,EAAMrB,QACjBC,OAAUoB,EAAME,mBAChBrB,OAAUmB,EAAMnB,QANTmB,EAAMC,gB,GAvCHE,IAAMC,WCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ebad89ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({title, year, summary, poster, genres}){\r\n    return (\r\n        <div className =\"movie\">\r\n        <img src ={poster} alt ={title} title = {title}/>\r\n    <div className =\"movie__data\">\r\n        <h3 className =\"movie__title\">{title}</h3>\r\n        <h5 className =\"movie__year\">{year}</h5>\r\n        <ul className =\"movie__genres\">\r\n            {genres.map((genre, index) =>(\r\n              <li key ={index} className =\"genres__genre\">{genre}</li>\r\n                ))} \r\n        </ul>\r\n        <p className =\"movie__summary\">{summary.slice(0,180)}...</p>\r\n    </div>\r\n    </div>\r\n    ); // map에는 유일한 key값이 필요하므로 내장되어있는 args인 index 를 쓴다. \r\n}\r\n// JSX에서는 class라고 쓰지않고 className\r\n// function component의 인자로 props의 특정값만 가져올때는 항상 {}을 감싸주자. \r\n Movie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    year:PropTypes.number.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n} \r\n// https://yts.mx/api/v2/list_movies.json 참고 \r\n\r\nexport default Movie;","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Movie from './Movie';\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies= async() => {\n    const {\n      data: {\n        data:{ movies }\n      } \n    } = await axios.get(\n      \"https://yts.mx/api/v2/list_movies.json?sort_by=rating\"\n      );\n    //json 뒤의 ?sort_by=rating은 사이트에 있다. rating순으로 sort\n    //axios 는 fetch의 일부같은 것. npm i axios \n    this.setState({ movies, isLoading: false}); // 앞은 Arr.movies: axios.data.data.movies\n  } // axios가 끝나길 기다렸다가 끝나면 setState() 실행 . async , await \n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n    <section className =\"container\">\n      <div className=\"header\">\n        <span className =\"header__title\">Dongmin's Movie List</span>\n      </div>\n      {isLoading ? (\n        <div className =\"loader\">\n          <span className =\"loader__text\">Loading...</span>\n        </div>\n      )\n      : (\n        <div className =\"movies\">\n        {movies.map(movie =>(\n        <Movie \n        key = {movie.id} //props는 유일한 key를 가져야함. \n        id = {movie.id} \n        title = {movie.title}\n        year = {movie.year} \n        summary = {movie.summary}\n        poster = {movie.medium_cover_image}\n        genres = {movie.genres}\n        />\n      ))}\n      </div>\n      )}\n    </section>\n      );\n  }\n} \nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n //위의 형태가 component를 사용하고자 할때 component상태이다. \n // 위와같은 JS와 HTML의 조합을 JSX라고 부른다. \n // JSX는 인접요소 X 위 component에서는 App이기 때문에 newComponent를 App에 import해야함.\n // 현재는 2개의 컴포넌트도 rendering이 된다.\n"],"sourceRoot":""}